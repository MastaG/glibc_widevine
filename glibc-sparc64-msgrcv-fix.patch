commit 321029f1c35db68c9d2e15408871030a36694541
Author: Aurelien Jarno <aurelien@aurel32.net>
Date:   Wed Mar 3 02:11:46 2010 -0800

    sparc64: Fix msgrcv()
    
    msgrcv() does not work on sparc64, as it passes the 6th argument using
    the ipc kludge, while the kernel waits for a 6 arguments syscall. This
    patches fixes the problem by using a sparc64 specific version of
    msgrcv.c.
    
    2010-03-03  Aurelien Jarno  <aurelien@aurel32.net>
    
    	* sysdeps/unix/sysv/linux/sparc/sparc64/msgrcv.c: New file.

diff --git a/sysdeps/unix/sysv/linux/sparc/sparc64/msgrcv.c b/sysdeps/unix/sysv/linux/sparc/sparc64/msgrcv.c
new file mode 100644
index 0000000..117762c
--- /dev/null
+++ b/sysdeps/unix/sysv/linux/sparc/sparc64/msgrcv.c
@@ -0,0 +1,49 @@
+/* Copyright (C) 2010 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; if not, write to the Free
+   Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
+   02111-1307 USA.  */
+
+#include <errno.h>
+#include <sys/msg.h>
+#include <ipc_priv.h>
+
+#include <sysdep-cancel.h>
+#include <sys/syscall.h>
+
+#include <bp-checks.h>
+
+ssize_t
+__libc_msgrcv (msqid, msgp, msgsz, msgtyp, msgflg)
+     int msqid;
+     void *msgp;
+     size_t msgsz;
+     long int msgtyp;
+     int msgflg;
+{
+  if (SINGLE_THREAD_P)
+    return INLINE_SYSCALL (ipc, 6, IPCOP_msgrcv, msqid, msgsz, msgflg,
+			   CHECK_N (msgp, msgsz), msgtyp);
+
+  int oldtype = LIBC_CANCEL_ASYNC ();
+
+  ssize_t result = INLINE_SYSCALL (ipc, 6, IPCOP_msgrcv, msqid, msgsz, msgflg,
+				   CHECK_N (msgp, msgsz), msgtyp);
+
+  LIBC_CANCEL_RESET (oldtype);
+
+  return result;
+}
+weak_alias (__libc_msgrcv, msgrcv)
