2009-02-27  Roland McGrath  <roland@redhat.com>

	* init.c (__nptl_initial_report_events): Mark __attribute_used__.
	* pthread_create.c (__nptl_threads_events, __nptl_last_event): Likewise.

Index: nptl/init.c
===================================================================
RCS file: /cvs/glibc/libc/nptl/init.c,v
retrieving revision 1.78
diff -u -r1.78 init.c
--- nptl/init.c	29 Jan 2009 20:35:17 -0000	1.78
+++ nptl/init.c	28 Feb 2009 02:26:34 -0000
@@ -260,7 +260,7 @@
 
 
 /* This can be set by the debugger before initialization is complete.  */
-static bool __nptl_initial_report_events;
+static bool __nptl_initial_report_events __attribute_used__;
 
 void
 __pthread_initialize_minimal_internal (void)
Index: nptl/pthread_create.c
===================================================================
RCS file: /cvs/glibc/libc/nptl/pthread_create.c,v
retrieving revision 1.59
diff -u -r1.59 pthread_create.c
--- nptl/pthread_create.c	9 Apr 2008 17:58:06 -0000	1.59
+++ nptl/pthread_create.c	28 Feb 2009 02:26:34 -0000
@@ -1,4 +1,4 @@
-/* Copyright (C) 2002-2007, 2008 Free Software Foundation, Inc.
+/* Copyright (C) 2002-2007,2008,2009 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
    Contributed by Ulrich Drepper <drepper@redhat.com>, 2002.
 
@@ -40,10 +40,10 @@
 int __pthread_debug;
 
 /* Globally enabled events.  */
-static td_thr_events_t __nptl_threads_events;
+static td_thr_events_t __nptl_threads_events __attribute_used__;
 
 /* Pointer to descriptor with the last event.  */
-static struct pthread *__nptl_last_event;
+static struct pthread *__nptl_last_event __attribute_used__;
 
 /* Number of threads running.  */
 unsigned int __nptl_nthreads = 1;
